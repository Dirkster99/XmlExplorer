<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:XmlExplorerLib.Templates"
                    xmlns:conv="clr-namespace:XmlExplorerLib.Converters"
                    xmlns:ctrl="clr-namespace:XmlExplorerLib.Controls"
                    xmlns:reskeys="clr-namespace:XmlExplorerLib.Themes"
                    >
 
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <views:XPathNodeTypeDataTemplateSelector x:Key="xPathNodeTypeDataTemplateSelector"/>
    <conv:InvertedBooleanToVisibilityConverter x:Key="invertedBooleanToVisibilityConverter"/>
    <conv:XPathNavigatorAttributesConverter x:Key="xPathNavigatorAttributesConverter"/>

    <!--xmlDelimiterStyle - XmlDelimiterStyleKey-->
    <Style x:Key="{x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Blue" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsSelected}" Value="True">
                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsSelectionActive}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsEnabled}" Value="False">
                <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="xmlAttributeValueStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="Blue" />
    </Style>

    <Style x:Key="xmlAttributeNameStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="Red" />
    </Style>

    <!-- xmlNameStyle - XmlNameStyleKey -->
    <Style x:Key="{x:Static reskeys:ResourceKeys.XmlNameStyleKey}" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="DarkRed" />
    </Style>

    <Style x:Key="xmlTextStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="DarkRed" />
    </Style>

    <Style x:Key="xmlCommentStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="Green" />
    </Style>

    <Style x:Key="xmlProcessingInstructionStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
        <Setter Property="Foreground" Value="Gray" />
    </Style>

    <HierarchicalDataTemplate x:Key="elementXPathNavigatorTemplate"
                            ItemsSource="{Binding Children}"
                            ItemTemplateSelector="{StaticResource xPathNodeTypeDataTemplateSelector}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}" Text="&lt;" />
            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlNameStyleKey}}" Text="{Binding Name}" />
            <TextBlock Text=" " />
            <TextBlock Style="{StaticResource xmlAttributeNameStyle}" Text="xmlns:" Visibility="{Binding HasNamespace, Converter={StaticResource booleanToVisibilityConverter}}" />
            <TextBlock Style="{StaticResource xmlAttributeNameStyle}" Text="{Binding XPathNavigator.Prefix}" Visibility="{Binding HasNamespace, Converter={StaticResource booleanToVisibilityConverter}}" />
            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}" Visibility="{Binding HasNamespace, Converter={StaticResource booleanToVisibilityConverter}}">="</TextBlock>
            <TextBlock Style="{StaticResource xmlAttributeValueStyle}" Text="{Binding XPathNavigator.NamespaceURI}" Visibility="{Binding HasNamespace, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}" Text="&quot; " Visibility="{Binding HasNamespace, Converter={StaticResource booleanToVisibilityConverter}}" />
            <ItemsControl ItemsSource="{Binding Converter={StaticResource xPathNavigatorAttributesConverter}}"
						  KeyboardNavigation.IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" KeyboardNavigation.IsTabStop="False" >
                            <TextBlock Style="{StaticResource xmlAttributeNameStyle}" Text="{Binding Name}" />
                            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">="</TextBlock>
                            <TextBlock Style="{StaticResource xmlAttributeValueStyle}" Text="{Binding Value}" />
                            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}" Text="&quot; " />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock
					Text="/"
					Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}"
					Visibility="{Binding XPathNavigator.HasChildren, Converter={StaticResource invertedBooleanToVisibilityConverter}}" />
            <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}" Text="&gt;" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="textXPathNavigatorTemplate">
        <TextBlock Style="{StaticResource xmlTextStyle}" Text="{Binding Value}" />
    </DataTemplate>

    <DataTemplate x:Key="attributeXPathNavigatorTemplate">
        <TextBlock Style="{StaticResource xmlAttributeValueStyle}" Text="{Binding Value}" />
    </DataTemplate>

    <DataTemplate x:Key="commentXPathNavigatorTemplate">
        <TextBlock Style="{StaticResource xmlCommentStyle}">
			<![CDATA[<!--]]>
			<TextBlock Style="{StaticResource xmlCommentStyle}" Text="{Binding Value}" />
			<![CDATA[-->]]>
		</TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="xmlDeclarationXPathNavigatorTemplate">
        <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
			&lt;?
			<TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlNameStyleKey}}" Text="{Binding Name}" />
			<TextBlock Style="{StaticResource xmlProcessingInstructionStyle}" Text="{Binding Value}" />
			?&gt;
		</TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="processingInstructionXPathNavigatorTemplate">
        <TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlDelimiterStyleKey}}">
			&lt;?
			<TextBlock Style="{DynamicResource {x:Static reskeys:ResourceKeys.XmlNameStyleKey}}" Text="{Binding Name}" />
			<TextBlock Style="{StaticResource xmlProcessingInstructionStyle}" Text="{Binding Value}" />
			?&gt;
		</TextBlock>
    </DataTemplate>

</ResourceDictionary>